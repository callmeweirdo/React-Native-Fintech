var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var TamaguiProvider_exports = {};
__export(TamaguiProvider_exports, {
  TamaguiProvider: () => TamaguiProvider
});
module.exports = __toCommonJS(TamaguiProvider_exports);
var import_constants = require("@tamagui/constants"), import_react = require("react"), import_ComponentContext = require("../contexts/ComponentContext"), import_useDidHydrateOnce = require("../hooks/useDidHydrateOnce"), import_useMedia = require("../hooks/useMedia"), import_ThemeProvider = require("./ThemeProvider"), import_config = require("../config"), import_jsx_runtime = require("react/jsx-runtime");
function TamaguiProvider({
  children,
  disableInjectCSS,
  config,
  className,
  defaultTheme,
  disableRootThemeClass,
  reset,
  themeClassNameOnRoot
}) {
  return (0, import_useMedia.setupMediaListeners)(), import_constants.isClient && ((0, import_useDidHydrateOnce.useDidHydrateOnceRoot)(), (0, import_constants.useIsomorphicLayoutEffect)(() => {
    if (config && !disableInjectCSS) {
      const style = document.createElement("style");
      return style.appendChild(document.createTextNode(config.getCSS())), document.head.appendChild(style), () => {
        document.head.removeChild(style);
      };
    }
  }, [config, disableInjectCSS])), /* @__PURE__ */ (0, import_jsx_runtime.jsx)(UnmountedClassName, { children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_ComponentContext.ComponentContext.Provider, { animationDriver: config?.animations, children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_ThemeProvider.ThemeProvider,
    {
      themeClassNameOnRoot: themeClassNameOnRoot ?? (0, import_config.getSetting)("themeClassNameOnRoot"),
      disableRootThemeClass: disableRootThemeClass ?? (0, import_config.getSetting)("disableRootThemeClass"),
      defaultTheme: defaultTheme ?? (config ? Object.keys(config.themes)[0] : ""),
      reset,
      className,
      children
    }
  ) }) });
}
function UnmountedClassName(props) {
  const [mounted, setMounted] = (0, import_react.useState)(!1);
  return (0, import_react.useEffect)(() => {
    setMounted(!0);
  }, []), import_constants.isWeb ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)("span", { style: { display: "contents" }, className: mounted ? "" : "t_unmounted", children: props.children }) : props.children;
}
TamaguiProvider.displayName = "TamaguiProvider";
//# sourceMappingURL=TamaguiProvider.js.map
